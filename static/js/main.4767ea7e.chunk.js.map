{"version":3,"sources":["components/searchbar.js","components/imagegalleryitem.js","components/imagegallery.js","components/modal.js","components/button.js","components/imagesAPI.js","components/notification.js","index.js"],"names":["Searchbar","state","inputValue","handleChange","e","value","target","setState","handleSubmit","preventDefault","handleSearch","props","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","images","takeItem","map","item","key","id","onClick","changeItem","src","webformatURL","alt","ImageGallery","takeItemFromId","onClose","Modal","handleKeyDown","code","window","addEventListener","removeEventListener","img","Button","fetchImages","scrollTo","top","document","documentElement","scrollHeight","behavior","query","page","axios","get","then","response","data","hits","Notification","massage","App","loading","error","showModal","image","imagesAPI","prevState","catch","finally","queryvalue","largeImageURL","prevProps","length","color","height","width","timeout","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4767ea7e.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\n\nclass Searchbar extends Component {\n\n  state = {\n    inputValue: ''\n  }\n    handleChange = (e) => {\n      const { value } = e.target\n\n      this.setState({\n        inputValue: value\n      })\n    }\n\n    handleSubmit = e => {\n      e.preventDefault()\n      const { handleSearch } = this.props\n\n      handleSearch(this.state.inputValue)\n\n      this.setState({ \n        inputValue: ''\n      })\n    }\n\nrender() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.inputValue}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n}\n}\n\nexport default Searchbar","import React from 'react'\n\n\nfunction ImageGalleryItem({ images, takeItem }) {\n\n  function changeItem(item) {\n    takeItem(item)\n  }\n    return images.map((item) => (\n        <li \n        className=\"ImageGalleryItem\"\n        key = {item.id}\n        onClick={() => changeItem(item)}\n        id={item.id}\n        >\n          <img \n          src={item.webformatURL}\n          alt=''\n          className=\"ImageGalleryItem-image\" \n          />\n        </li>\n    ));\n}\n\nexport default ImageGalleryItem","import React from 'react'\nimport ImageGalleryItem from \"./imagegalleryitem\"\n\nfunction ImageGallery({ images, takeItemFromId, onClose }) {\n\n    return (\n        <ul className=\"ImageGallery\" onClick={onClose}>\n          <ImageGalleryItem images={images} takeItem={takeItemFromId}/>\n        </ul>\n    )\n}\n\nexport default ImageGallery","import React, { Component } from 'react'\n\nclass Modal extends Component {\n\n  handleKeyDown = (e) => {\n      if(e.code === \"Escape\") {\n        this.props.onClose()\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown)\n  }\n\n  render() {\n\n    return (\n      <div className=\"Overlay\">\n        <div className=\"Modal\">\n          <img src={this.props.img} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;","import React from 'react'\n\n\nfunction Button({fetchImages}) {\n    window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      })\n    return (\n        <button \n        className=\"Button\"\n        type=\"button\"\n        onClick={fetchImages}\n        >load more</button>\n    )\n}\n\nexport default Button","import axios from 'axios';\n\nconst fetchImagesAPI = ({ query, page }) => {\n    return axios\n    .get(`https://pixabay.com/api/?key=18831622-9244bba9a478239a3bc8b47ec&q=${query}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`)\n    .then(response => response.data.hits)\n}\n\nexport default {\n    fetchImagesAPI,\n}","import React from 'react'\n\nexport default function Notification({massage}) {\n    return <div>{massage}</div>\n}","import React, {Component} from 'react'\nimport ReactDOM from 'react-dom';\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nimport Serchbar from \"./components/searchbar.js\"\nimport ImageGallery from \"./components/imagegallery.js\"\nimport Modal from \"./components/modal.js\"\nimport Button from \"./components/button.js\"\nimport imagesAPI from \"./components/imagesAPI.js\"\nimport Notification from \"./components/notification.js\"\n\nimport './styles.css'\n\nclass App extends Component {\n\n  state = {\n    images: [],\n    query: '',\n    loading: true,\n    error: null,\n    page: 1,\n    showModal: false,\n    image: ''\n  }\n\n  componentDidUpdate( prevProps, prevState ) {\n    const prevQuery = prevState.query\n    const nextQuery = this.state.query\n\n    if(prevQuery !== nextQuery) {\n      this.fetchImages()\n    }\n  }\n\n  fetchImages = () => {\n    const { query, page } = this.state\n\n    this.setState({\n      loading: true\n    })\n\n    imagesAPI\n    .fetchImagesAPI({query, page})\n    .then(images => this.setState(prevState => ({ images: [...prevState.images, ...images], page: prevState.page + 1 })))\n    .catch(error => this.setState({ error }))\n    .finally(() => this.setState({ loading: false }))\n  }\n\n  handleSearch = (queryvalue) => {\n    this.setState({\n      query: queryvalue,\n      page: 1,\n      images: []\n    })\n  }\n\n  onClose = () => {\n    this.setState(state => ({\n      showModal: !state.showModal\n    }))\n  }\n\n  takeItemFromId = (item) => {\n    const { largeImageURL } = item\n    this.setState({\n      image: largeImageURL\n    })\n  }\n\nrender() {\nconst { images, error, loading, showModal, image } = this.state\n\n  return (\n    <>\n      <Serchbar handleSearch={this.handleSearch} />\n\n      {error && (\n        <Notification\n          massage={`Whoops, something went wrong: ${error.massage}`}\n        />\n      )} \n      {\n        images.length > 0 && <ImageGallery images={images} takeItemFromId={this.takeItemFromId} onClose={this.onClose} />\n      }\n      {loading\n      ? (<Loader\n         type=\"ThreeDots\"\n         color=\"#3f51b5\"\n         height={80}\n         width={80}\n         timeout={3000}\n       />) \n       : <Button fetchImages={this.fetchImages}/>\n      }\n      {\n        showModal && <div className=\"Modal\"><Modal img={image} onClose={this.onClose}/></div>\n      }\n    </>\n  );\n}\n\n}\n\nReactDOM.render( <App />, document.getElementById(\"root\"))"],"sourceRoot":""}